buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.mapvine:gradle-cobertura-plugin:1.0'
    }
}

apply plugin: 'java'
apply plugin: 'cobertura'
apply plugin: 'eclipse'
apply plugin: 'idea'

group = 'net.project'

version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
    // required to get ReportNG 1.1.3 (central Maven repo has only 1.1.2)
    mavenRepo url: "http://clojars.org/repo"
}

ext.guavaVersion = '13.0.1'
ext.testngVersion = '6.8'
ext.uncommonsVersion = '1.1.3'
ext.guiceVersion = '3.0'

dependencies {
    compile group: 'com.google.guava', name: 'guava', version: ext.guavaVersion

    testCompile group: 'org.testng', name: 'testng', version: ext.testngVersion
    testCompile group: 'org.uncommons', name: 'reportng', version: ext.uncommonsVersion
    // workaround for a known issue with TestNG 6.x; explicitely add Guice (Gradle will fail to run tests otherwise)
    testCompile group: 'com.google.inject', name: 'guice', version: ext.guiceVersion
}
 
// ensure that test resources (src/test/resources) are added to CLASSPATH;
// see http://forums.gradle.org/gradle/topics/tests_arent_executed_when_setting_the_test_runtimeclasspath and
// http://gradle.org/docs/current/dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:classpath
sourceSets {
    main {
        runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
    }
    test {
        runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
    }
}

test {
    useTestNG() {
        suiteXmlBuilder().suite(name: 'pnet-rest-api-core', parallel: 'tests') {
            test (name: 'all-tests') {
                packages {
                    'package' (name: 'net.project.rest.api.*')
                }
            }
        }
    }
    options {
        listeners << 'org.uncommons.reportng.HTMLReporter'
        listeners << 'org.uncommons.reportng.JUnitXMLReporter'
    }
}

// see https://github.com/Mapvine/gradle-cobertura-plugin
cobertura {
    format = 'xml'
    includes = ['**/*.java']
}

jar {
    manifest {
        attributes 'Implementation-Title': 'P.net RESTful API Core', 'Implementation-Version': version
    }
}